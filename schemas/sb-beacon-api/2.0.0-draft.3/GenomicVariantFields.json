{
   "$id" : "https://schemablocks.org/schemas/beacon-v2/GenomicVariantFields/2.0.0-draft.3",
   "$schema" : "http://json-schema.org/draft-07/schema#",
   "description" : "All the required fields to query any kind of variant (e.g. SNP, DUP,\netc.).\n",
   "examples" : [],
   "meta" : {
      "contributors" : [
         {
            "id" : "https://beacon-project.io/categories/people.html",
            "label" : "ELIXIR Beacon project team"
         },
         {
            "id" : "github:@jrambla",
            "label" : "Jordi Rambla"
         },
         {
            "id" : "github:@sdelatorrep",
            "label" : "Sabele de la Torre"
         },
         {
            "id" : "github:@mamanambiya",
            "label" : "Mamana Mbiyavanga"
         },
         {
            "id" : "orcid:0000-0002-9903-4248",
            "label" : "Michael Baudis"
         }
      ],
      "provenance" : [
         {
            "id" : "https://github.com/ga4gh-beacon/specification-v2",
            "label" : "Beacon v2 provisional / developer version"
         }
      ],
      "sb_status" : "proposed",
      "used_by" : [
         {
            "id" : "https://github.com/progenetix/schemas/",
            "label" : "Progenetix database schema (Beacon+ backend)"
         }
      ]
   },
   "properties" : {
      "alternateBases" : {
         "$ref" : "AlternateBases.yaml#/"
      },
      "assemblyId" : {
         "$ref" : "Assembly.yaml#/"
      },
      "end" : {
         "description" : "Precise or bracketing the end of the variants of interest:\n* (0-based, exclusive) - see `start`\n* for bracket queries, provide 2 values (e.g. [111,222]).\n",
         "items" : {
            "format" : "int64",
            "minimum" : "1",
            "type" : "integer"
         },
         "maxItems" : "2",
         "minItems" : "0",
         "type" : "array"
      },
      "id" : {
         "description" : "Id of the variant to display.\n",
         "type" : "string"
      },
      "mateName" : {
         "$ref" : "Chromosome.yaml#/"
      },
      "referenceBases" : {
         "$ref" : "ReferenceBases.yaml#/"
      },
      "referenceName" : {
         "$ref" : "Chromosome.yaml#/"
      },
      "start" : {
         "description" : "Precise or fuzzy start coordinate position(s), allele locus\n(0-based, inclusive).\n* `start` only:\n  - for single positions, e.g. the start of a specified sequence\n  alteration where the size is given through the specified\n  `alternateBases`\n  - typical use are queries for SNV and small InDels\n  - the use of `start` without an `end` parameter requires the use\n  of `alternateBases`\n\n* `start` and `end`:\n  - for searching any variant falling fully or partially within the\n  range between `start` and `end` (a.k.a. \"range query\")\n  - additional use of `variantType` OR `alternateBases` can limit the\n  scope of the query\n  - by convention, partial overlaps of variants with the indicated\n  genomic range are accepted; for specific overlap requirements the\n  4-parammeter \"Bracket Queries\" should be employed\n* use of 2 values in both `start` and `end` for constructing a\n\"Bracket Query\":\n  - can be used to match any contiguous genomic interval, e.g. for\n  querying imprecise positions\n    * identifying all structural variants starting between `start[0]`\n    and `start[1]`, and ending between `end[0]` <-> `end[1]`\n    * single or double sided precise matches can be achieved by\n    setting `start[1]=start[0]+1` and `end[1]=end[0]+1`\n",
         "items" : {
            "format" : "int64",
            "minimum" : "0",
            "type" : "integer"
         },
         "maxItems" : "2",
         "minItems" : "1",
         "type" : "array"
      },
      "variantType" : {
         "description" : "The `variantType` is used to query variants which are not defined\nthrough a sequenc of one or more bases using the `alternateBases`\nparameter. Examples here are e.g. structural variants:\n* DUP\n  - increased allelic count of material from the genomic region\n  between `start` and `end` positions\n  - no assumption about the placement of the additional sequences is\n  being made (i.e. no _in situ_ requirement as tandem duplications)\n* DEL: deletion of sequence following `start`\n* BND: breakend, i.e. termination of the allele at position\n      `start` or in the `startMin` => `startMax` interval, or fusion\n      of the sequence to distant partner\nEither `alternateBases` or `variantType` is required, with the\nexception of range queries (single `start` and `end` parameters).\n",
         "type" : "string"
      }
   },
   "title" : "GenomicVariantFields",
   "type" : "object",
   "version" : "2.0.0-draft.3"
}

