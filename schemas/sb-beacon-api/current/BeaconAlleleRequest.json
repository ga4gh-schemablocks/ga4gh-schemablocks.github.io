{
   "$id" : "https://schemablocks.org/schemas/beacon/BeaconAlleleRequest/v1.1.0",
   "$schema" : "http://json-schema.org/draft-07/schema#",
   "description" : "Allele request as interpreted by the beacon.",
   "examples" : [
      {
         "assemblyId" : "GRCh38",
         "datasetIds" : [
            "arraymap",
            "progenetix"
         ],
         "endMax" : "26000000",
         "endMin" : "21967753",
         "referenceBases" : "N",
         "referenceName" : "9",
         "startMax" : "21975098",
         "startMin" : "18000000",
         "variantType" : "DEL"
      },
      {
         "alternateBases" : "A",
         "assemblyId" : "GRCh38",
         "datasetIds" : [
            "dipg"
         ],
         "referenceBases" : "G",
         "referenceName" : "17",
         "start" : "7577121"
      }
   ],
   "meta" : {
      "contributors" : [
         {
            "description" : "Marc Fiume",
            "id" : "orcid:0000-0002-9769-375X"
         },
         {
            "description" : "Michael Baudis",
            "id" : "orcid:0000-0002-9903-4248"
         },
         {
            "description" : "Sabela de la Torre Pernas",
            "id" : "orcid:0000-0002-5129-2248"
         },
         {
            "description" : "Jordi Rambla",
            "id" : "orcid:0000-0001-9091-257X"
         },
         {
            "description" : "Beacon developers..."
         }
      ],
      "provenance" : [
         {
            "description" : "Beacon API",
            "id" : "https://github.com/ga4gh-beacon/specification/"
         }
      ],
      "sb_status" : "implemented",
      "used_by" : [
         {
            "description" : "Beacon",
            "id" : "https://github.com/ga4gh-beacon/specification/blob/master/beacon.yaml"
         },
         {
            "description" : "Progenetix database schema (Beacon+ backend)",
            "id" : "https://github.com/progenetix/schemas/tree/master/main/yaml"
         }
      ]
   },
   "properties" : {
      "alternateBases" : {
         "description" : "The bases that appear instead of the reference bases. Accepted values: [ACGTN]*. N is a wildcard, that denotes the position of any base, and can be used as a standalone base of any type or within a partially known sequence. For example a sequence where the first and last bases are known, but the middle portion can exhibit countless variations of [ACGT], or the bases are unknown: ANNT the Ns can take take any form of [ACGT], which makes both ACCT and ATGT (or any other combination) viable sequences.\n\nSymbolic ALT alleles (DEL, INS, DUP, INV, CNV, DUP:TANDEM, DEL:ME,\nINS:ME) will be represented in `variantType`.\n\nOptional: either `alternateBases` or `variantType` is required.\n",
         "pattern" : "^([ACGTN]+)$",
         "type" : "string"
      },
      "assemblyId" : {
         "description" : "Assembly identifier (GRC notation, e.g. `GRCh37`).",
         "examples" : [
            "GRCh38"
         ],
         "type" : "string"
      },
      "datasetIds" : {
         "description" : "Identifiers of datasets, as defined in `BeaconDataset`. If this\nfield is null/not specified, all datasets should be queried.\n",
         "examples" : [
            [
               "arraymap",
               "TCGA"
            ]
         ],
         "items" : "string",
         "type" : "array"
      },
      "end" : {
         "description" : "Precise end coordinate (0-based, exclusive). See start.\n",
         "examples" : [
            "5556"
         ],
         "type" : "integer"
      },
      "endMax" : {
         "description" : "Maximum end coordinate. See startMin.",
         "examples" : [
            "344452",
            "244238579"
         ],
         "type" : "integer"
      },
      "endMin" : {
         "description" : "Minimum end coordinate. See startMin.",
         "examples" : [
            "34",
            "244238578"
         ],
         "type" : "integer"
      },
      "mateName" : {
         "allof" : [
            {
               "$ref" : "https://schemablocks.org/schemas/beacon/v1.1.0/Chromosome.json"
            },
            {
               "description" : "Second chromosome in fuion events, as string\n",
               "examples" : [
                  "22",
                  "Y"
               ]
            }
         ]
      },
      "referenceBases" : {
         "description" : "Reference bases for this variant (starting from `start`).\nAccepted values: [ACGTN]*. N is a wildcard, that denotes the position of \nany base, and can be used as a standalone base of any type or within a \npartially known sequence. For example a sequence where the first and \nlast bases are known, but the middle portion can exhibit countless \nvariations of [ACGT], or the bases are unknown: ANNT the Ns can take \ntake any form of [ACGT], which makes both ACCT and ATGT (or any other \ncombination) viable sequences.\n",
         "pattern" : "^([ACGTN]+)$",
         "type" : "string"
      },
      "referenceName" : {
         "allof" : [
            {
               "$ref" : "https://schemablocks.org/schemas/beacon/v1.1.0/Chromosome.json"
            },
            {
               "description" : "Chromosome as string\n",
               "examples" : [
                  "22",
                  "Y"
               ]
            }
         ]
      },
      "start" : {
         "description" : "Precise start coordinate position, allele locus (0-based, inclusive).\n* start only:\n - for single positions, e.g. the start of a specified sequence alteration where the size is given through the specified alternateBases\n - typical use are queries for SNV and small InDels\n - the use of \"start\" without an \"end\" parameter requires the use of \"referenceBases\"\n* start and end:\n - special use case for exactly determined structural changes\n",
         "examples" : [
            "0",
            "6298005"
         ],
         "format" : "int64",
         "minimum" : "0",
         "type" : "integer"
      },
      "startMax" : {
         "description" : "Maximum start coordinate. See startMin.",
         "examples" : [
            "6298006",
            "243998770"
         ],
         "type" : "integer"
      },
      "startMin" : {
         "description" : "Minimum start coordinate\n* startMin + startMax + endMin + endMax\n - for querying imprecise positions (e.g. identifying all structural variants starting anywhere between startMin <-> startMax, and ending anywhere between endMin <-> endMax)\n - single or double sided precise matches can be achieved by setting startMin = startMax XOR endMin = endMax\n",
         "examples" : [
            "0",
            "6298005"
         ],
         "type" : "integer"
      },
      "variantType" : {
         "description" : "The `variantType` is used to denote e.g. structural variants.\n\nExamples:\n* DUP: duplication of sequence following `start`; not necessarily in\nsitu\n* DEL: deletion of sequence following `start`\n* BND: breakend, i.e. termination of the allele at position\n     `start` or in the `startMin` => `startMax` interval, or fusion\n     of the sequence to distant partner\n\n\nOptional: either `alternateBases` or `variantType` is required.\n",
         "examples" : [
            "DUP",
            "DEL"
         ],
         "type" : "string"
      }
   },
   "required" : [
      "referenceName",
      "referenceBases",
      "assemblyId"
   ],
   "title" : "BeaconAlleleRequest",
   "type" : "object"
}

